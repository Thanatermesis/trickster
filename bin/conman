#!/usr/bin/env ruby

require 'gli'
require 'conman'
require 'erb'
require 'fileutils'

include GLI::App

program_desc 'Bootstrap, generate, and manage your conman presentation'

version Conman::VERSION

desc 'Create a new conman presentation'
long_desc <<EOS
This will create a completely self-contained presentation that can be run just from the files
in the directory you name.  It will have a static copy of the JavaScript files, JavaScript third-party
libraries and CSS files you need to run your conman application.

You can examine the file `slides` to see some examples of how to format your
presentation.  You can run `conman build` in the directory to create the HTML
file from your slides.

Note that if you upgrade conman, you should run `conmand update` in your slide directory
to get the latest JavaScript and CSS files.
EOS
arg_name 'dir_name'
command :init do |c|
  c.action do |global_options,options,args|
    dir = args.shift
    FileUtils.mkdir(dir)
    File.open(File.join(dir,'slides'),'w') do |file|
      file.puts <<EOF
Title of your slideshow
!TITLE
Title of your slideshow
Subtitle
Sub-sub title

!SECTION: background=dddddd
A section

!BULLETS
A bullet list
* can use any
- reasonable
+ bullet

!CODE: callout=3,4,5
class YourCode

  def initialize(will)
    @be_highlighted
  end

end
EOF
      base = File.expand_path(File.join(File.dirname(__FILE__),'..'))

      copier = Conman::FileCopier.new(base,dir)
      copier.copy_files('js','js')
      copier.copy_files('js/lib','js')
      copier.copy_files('css','css')

      puts "Your slideshow is ready, run conman build to build it"
    end
  end
end

desc 'Update an existing slideshow with the latest Conman JS/CSS files'
long_desc <<EOS
Run this after you've upgraded conman and want to get the latest features.  Since your 
slideshow is entirely self-contained, when you upgrade conmand, your static JavaScript and
CSS files will be out of date.

Note that `styles.css`, which was provided by conman as a basis for styling, will not
be touched, and your customizations will remain. All other files that conman gave you
when you ran `conman init` will be overwritten.
EOS
arg_name '[dir_name]'
command :update do |c|
  c.action do |global_options,options,args|
    dir = args.shift
    dir = '.' if dir.nil?
    base = File.expand_path(File.join(File.dirname(__FILE__),'..'))

    copier = Conman::FileCopier.new(base,dir)
    copier.copy_files('js','js')
    copier.copy_files('js/lib','js')
    copier.copy_files('css','css', :except => "styles.css")
  end
end

desc 'Generate the presentation from your slides'
command :build do |c|
  c.desc          'Name of the generated HTML file'
  c.arg_name      'file'
  c.default_value 'index.html'
  c.flag          [:o,'output-file']

  c.desc          'File containing your slides'
  c.arg_name      "file"
  c.default_value "slides"
  c.flag          [:f,'slides-file']


  c.action do |global_options,options,args|
    lines  = File.open(options[:'slides-file']).readlines.map(&:chomp)
    parser = Conman::SlideParser.new(lines,Conman::SlideRenderer.new)
    body   = parser.body
    title  = parser.title

    erb = ERB.new(File.new(File.expand_path(File.join(File.dirname(__FILE__),'..','erb','index.html.erb'))).readlines.join(""))
    File.open(options[:'output-file'],"w") do |file|
      file.puts erb.result(binding)
    end
  end
end

exit run(ARGV)
